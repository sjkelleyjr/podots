# this AWS documentation was used to get running on elastic beanstalk with Django: https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html
option_settings:
  #had to create a main.py at the root and set application = app to get this to work.
  #it doesn't work following the AWS docs, likely because this project repo is super old.
  aws:elasticbeanstalk:container:python:
    WSGIPath: main:app
  #this tells elastic beanstalk where to look for static files (in our case CSS and logo images)
  # see this SO post for more info: https://stackoverflow.com/questions/14043073/amazon-elastic-beanstalk-not-serving-django-static-files
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static
  #tells elastic beanstalk where to look for the django settings (such as whether to use psql or sqlite for example)
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: hnclone.settings

# here we can run commands when the ec2 instance starts up.
container_commands:
  #not sure if this is actually necessary tbh, I don't know enough about Django, it might not be necessary now that we have a psql database, but it was necessary when I was running with a sqlite db.
  # note that this might potentially cause problems when the ec2 host goes down and a new one is created as we'll interact with the database when we maybe shouldn't. REVISIT THIS LATER IF NECESSARY.
  01_migrate:
    command: "source /var/app/venv/*/bin/activate && python3 manage.py migrate"
    leader_only: true
  # ensure that postgres is installed on the ec2 host in order to pip install the postgres driver.
  03_install_postgres:
    command: "source /var/app/venv/*/bin/activate && yes | sudo yum install postgresql-devel"
    leader_only: true